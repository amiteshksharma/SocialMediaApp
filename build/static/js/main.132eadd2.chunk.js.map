{"version":3,"sources":["Pages/Login.js","Components/Navigation.js","Components/Favorite.js","Components/Tile.js","Components/Searchbar.js","Pages/Main.js","Pages/Create.js","Components/MenuItem.js","Pages/Profile.js","Components/StatesSignup.js","Pages/Signup.js","Components/Node.js","Pages/Users.js","Pages/Explore.js","Pages/Post.js","Components/States.js","Pages/Area.js","App.js","serviceWorker.js","index.js","Images/download.png","Images/Background.jpg"],"names":["Login","props","state","ModalShow","Email","Password","displayModal","bind","loginRequest","console","log","this","fetch","method","body","JSON","stringify","email","password","headers","then","response","json","data","sessionStorage","setItem","Name","history","push","catch","error","Modal","size","aria-labelledby","centered","show","onHide","setState","Header","closeButton","Title","id","Body","className","Container","Row","Col","md","span","offset","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Button","variant","block","onClick","React","Component","Navigation","getItem","useHistory","Nav","defaultActiveKey","eventKey","Link","name","pathname","query","window","location","reload","profile","text","clear","Favorite","useState","favorite","setFavorite","Likes","likes","setLikes","loadTotalLikes","title","useEffect","myLikes","undefined","includes","checkIsLiked","style","fontSize","currentEmail","currEmail","Tile","path","href","isLiked","Searchbar","event","newValue","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","Usernames","Users","renderSuggestion","escapeRegexCharacters","getSuggestionValue","Object","keys","str","replace","suggestion","search","escapedValue","trim","regex","RegExp","filter","person","test","suggestionText","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","twitter","map","part","index","highlight","key","inputProps","withRouter","Main","Right","Post","MyLikes","Username","UsernamesList","isEmpty","Promise","all","currUser","setTimeout","results","brand","toLowerCase","startsWith","marginTop","post","length","Create","Loading","TitleError","BodyError","isTitleError","isBodyError","submitPost","renderErrorMessage","isError","titleErr","bodyErr","color","as","rows","maxLength","Spinner","animation","SimpleMenu","open","setOpen","anchorRef","useRef","handleClose","current","contains","handleListKeyDown","preventDefault","prevOpen","focus","ref","aria-controls","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","Profile","Posts","Follower","Following","Followers","ReadOnly","Bio","Anchor","followClick","unfollowClick","redirectFollows","saveBio","userEmail","profileEmail","follow","tab","bio","getCurrentEmail","src","Background","alt","ProfileIcon","width","height","marginLeft","cursor","marginBottom","plaintext","readOnly","defaultValue","backgroundColor","StateList","placeHolder","selected","State","signUpRequest","setUserState","Node","setName","setEmail","setBio","follower","setFollower","user","getName","showFollow","following","button","match","params","UserFollowing","paddingRight","isFollowing","Explore","createPost","Comment","CommentPost","enterComment","compareObjects","getEmail","getTitle","comments","objOne","objTwo","objectsAreSame","obj","Media","comment","useStyles","makeStyles","theme","formControl","minWidth","maxWidth","spacing","inputLabel","selectClass","States","classes","statelist","FormControl","InputLabel","Select","labelId","multiple","GetStates","states","App","exact","component","Area","Signup","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.132eadd2.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Css/Login.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'; \r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ModalShow: false,\r\n      Email: '',\r\n      Password: ''\r\n    }\r\n\r\n    this.displayModal = this.displayModal.bind(this);\r\n    this.loginRequest = this.loginRequest.bind(this);\r\n  }\r\n\r\n  loginRequest() {\r\n    console.log(this.state.Email);\r\n    console.log(this.state.Password);\r\n    fetch(\"/users/login\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: this.state.Email,\r\n        password: this.state.Password\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json()).then(data => {\r\n      console.log(data);\r\n      sessionStorage.setItem('Email', data.Email);\r\n      sessionStorage.setItem('Name', data.Name);\r\n      this.props.history.push('/home');\r\n      }).catch(error => {\r\n        console.log(\"Error\");\r\n      });\r\n  }\r\n\r\n  displayModal() {\r\n    return (\r\n      <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={this.state.ModalShow}\r\n      onHide={() => this.setState({ ModalShow: false})}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Enter email to send password reset\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n            consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"Login\">\r\n          <div className=\"login-form\">\r\n            <Container>\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <h2>LOGIN</h2>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Email address</Form.Label></div>\r\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                      onChange={(e) => this.setState({ Email: e.target.value})}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                      <div><Form.Label>Password</Form.Label></div>\r\n                      <Form.Control type=\"password\" placeholder=\"Password\" \r\n                        onChange={(e) => this.setState({ Password: e.target.value })}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <Button variant=\"primary\" className=\"mt-2\" size=\"lg\" block\r\n                  onClick={() => this.loginRequest()}>Login</Button>\r\n                  {' '}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 3, offset: 3}}>\r\n                  <footer className=\"user-register\"><button className=\"user-register-btn\"\r\n                  onClick={() => this.props.history.push('/signup')}>Not a user? Sign up</button></footer>\r\n                </Col>\r\n                \r\n                <Col md={{ span: 3, offset: 1}}>\r\n                  <footer className=\"forgot-password\"><button className=\"forgot-password-btn\" onClick={() => this.setState({ ModalShow: true})}>Forgot Password?</button></footer>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          {this.state.ModalShow ? this.displayModal() : null}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../Css/Navigation.css';\r\n\r\nexport default function Navigation(props) {\r\n    console.log(sessionStorage.getItem('Email'));\r\n    const history = useHistory();\r\n\r\n    const createPost = (e) => {\r\n        history.push(`/create`);\r\n    }\r\n\r\n    const logout = () => {\r\n        console.log(\"here\");\r\n        fetch(\"/users/logout\")\r\n            .then(response => response.text())\r\n            .then(data => {\r\n              console.log(data);\r\n              if(data === 'True') {\r\n                let path = `/`; \r\n                sessionStorage.clear();\r\n                history.push(path);\r\n              }     \r\n          });\r\n      }\r\n\r\n      const profile = () => {\r\n        const email = sessionStorage.getItem(\"Email\");\r\n        const name = sessionStorage.getItem(\"Name\")\r\n        history.push({\r\n          pathname: `/profile/${name}`,\r\n          query: '?user=user',\r\n          state: { name: email}\r\n        });\r\n        window.location.reload(false);\r\n      }\r\n    \r\n    return (\r\n        <div className=\"navigation\">\r\n        <Nav defaultActiveKey={props.eventKey} className=\"flex-column\" >\r\n            <Nav.Link eventKey=\"1\" onClick={(e) => history.push('/home')}>Home</Nav.Link>\r\n            <Nav.Link eventKey=\"2\" onClick={(e) => history.push('/explore')}>Explore</Nav.Link>\r\n            <Nav.Link eventKey=\"3\" onClick={(e) => history.push('/area')}>Area Search</Nav.Link>\r\n            <Nav.Link eventKey=\"4\" onClick={(e) => profile()}>Profile</Nav.Link>\r\n            <Nav.Link eventKey=\"5\" onClick={(e) => logout()}>Logout</Nav.Link>\r\n            <Nav.Link eventKey=\"6\" onClick={(e) => createPost()}>Create Post</Nav.Link>\r\n        </Nav>\r\n    </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'; \r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport '../Css/Favorite.css';\r\n\r\nexport default function Favorite(props) {\r\n\r\n    const [favorite, setFavorite] = useState({Favorite: true});\r\n    const [likes, setLikes] = useState({Likes: 0});\r\n\r\n    const checkIsLiked = () => {\r\n        const myLikes = props.myLikes;\r\n        console.log(myLikes);\r\n        if(myLikes === undefined) {\r\n            return;\r\n        }\r\n        \r\n        if(myLikes.includes(props.Title)) {\r\n            setFavorite({ Favorite: false});\r\n        }   \r\n    }\r\n\r\n    const loadTotalLikes = () => {\r\n        fetch(\"/backend/loadlikes\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.json()).then(data => {\r\n            setLikes({Likes: data.Likes});\r\n            \r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });    \r\n    }\r\n\r\n    const like = () => {\r\n        fetch(\"/backend/postlike\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            currentEmail: sessionStorage.getItem('Email'),\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.text()).then(data => { \r\n            loadTotalLikes();\r\n            console.log(\"here\");\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n    const unlike = () => {\r\n        console.log(\"here\");\r\n        fetch(\"/backend/unlike\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            currEmail: sessionStorage.getItem('Email'),\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.text()).then(data => {  \r\n            loadTotalLikes();\r\n            console.log(\"here\");\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkIsLiked();\r\n        loadTotalLikes();\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"display-likes\">\r\n            {likes.Likes <= 0 ? <p>{props.Likes}</p> : <p>{likes.Likes}</p>}\r\n        </div>\r\n        <div className=\"favorite-icon\" onClick={() => setFavorite({Favorite: !favorite.Favorite})}>\r\n            {favorite.Favorite ? \r\n                <FavoriteBorderIcon style={{fontSize: 'calc(1.5vw)'}} className=\"favorite\" onClick={like}/> \r\n                : \r\n                <FavoriteIcon style={{fontSize: 'calc(1.5vw)'}} className=\"favorited\" onClick={unlike}/> \r\n            }\r\n        </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport '../Css/Tile.css';\r\nimport Favorite from './Favorite.js';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Tile(props) {\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = () => { \r\n        let path = `/profile/${props.Name}`; \r\n        history.push({\r\n            pathname: path,\r\n            query: '?user=user',\r\n            state: { name: props.Email}\r\n        });\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        console.log(props);\r\n        console.log(\"here\")\r\n        history.push({\r\n            pathname: `/post/${props.Name}/${props.Title}`,\r\n            query: '?post=post',\r\n            state: { name: props.Email, title: props.Title}\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"tile-container\" >\r\n            <section className=\"tile-author\">\r\n                <AccountCircleIcon style={{fontSize: 'calc(2vw)'}} onClick={routeChange} /> \r\n                <h6 className=\"profile-link\"><a href={`/profile/${props.Name}`}>{props.Name}</a></h6>\r\n                <Favorite Title={props.Title} Email={props.Email} myLikes={props.isLiked} />\r\n            </section>\r\n\r\n            <div onClick={(e) => handleClick(e)}>\r\n                <section className=\"title-section\">\r\n                    <div className=\"title\">\r\n                        <h3>{props.Title}</h3>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"summary-section\">\r\n                    <div className=\"summary\">\r\n                        <h3>{props.Body}</h3>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { withRouter} from 'react-router-dom';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match'\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse'\r\nimport '../Css/Searchbar.css';  \r\n\r\nclass Searchbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            Usernames: [],\r\n            Users: {}\r\n        };    \r\n\r\n        this.renderSuggestion = this.renderSuggestion.bind(this);\r\n        this.getSuggestions = this.getSuggestions.bind(this);\r\n        this.escapeRegexCharacters = this.escapeRegexCharacters.bind(this);\r\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\r\n    }\r\n\r\n    onChange = (event, { newValue, method }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(\"/users/getusernames\")\r\n        .then(response => response.json()).then(data => {  \r\n            console.log(data);\r\n            \r\n            this.setState({ Usernames: Object.keys(data), Users: data });\r\n        });\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    escapeRegexCharacters(str) {\r\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    getSuggestionValue(suggestion){\r\n        this.setState({value: this.state.Users[suggestion]}, () => {\r\n            this.props.history.push({\r\n                pathname: `/profile/${suggestion}`,\r\n                search: `?user=user`,\r\n                state: { name: this.state.Users[suggestion] }\r\n            });\r\n            window.location.reload(false);\r\n        });\r\n        return suggestion;\r\n    } \r\n        \r\n    getSuggestions(value) {\r\n        const escapedValue = this.escapeRegexCharacters(value.trim());\r\n\r\n        if (escapedValue === '') {\r\n            return [];\r\n        }\r\n        \r\n        const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n        \r\n        return this.state.Usernames.filter(person => regex.test(person));\r\n    }\r\n\r\n    renderSuggestion(suggestion, { query }) {\r\n        const suggestionText = suggestion;\r\n        const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n        const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n        \r\n        return (\r\n            <span className={'suggestion-content ' + suggestion.twitter}>\r\n            <span className=\"name\">\r\n                {\r\n                parts.map((part, index) => {\r\n                    const className = part.highlight ? 'highlight' : null;\r\n        \r\n                    return (\r\n                    <span className={className} key={index} onClick={() => console.log(suggestion)}>{part.text}</span>\r\n                    );\r\n                })\r\n                }\r\n            </span>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n        const inputProps = {\r\n            placeholder: \"Find Friends...\",\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        return (\r\n            <Autosuggest \r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={this.getSuggestionValue}\r\n                renderSuggestion={this.renderSuggestion}\r\n                inputProps={inputProps} />\r\n            );\r\n        }\r\n}\r\n\r\nexport default withRouter(Searchbar);","import React from 'react'\r\nimport '../Css/Explore.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Tile from '../Components/Tile';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: [],\r\n            Username: null,\r\n            UsernamesList: [],\r\n            isEmpty: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n        fetch(\"/users/followerspost\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                currUser: sessionStorage.getItem('Email')\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json()).then(data => {\r\n            this.setState({ Post: data });\r\n        }),\r\n        \r\n        fetch(\"/backend/mylikes\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: sessionStorage.getItem('Email'),\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                this.setState({ MyLikes: data }, () => {\r\n                    console.log(this.state.MyLikes);\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.setState({isEmpty: true})\r\n                }, 1000);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n        ]).then();\r\n    }\r\n\r\n    displayUsernames(event) {\r\n        let results = this.state.UsernamesList.filter((brand) => {\r\n             return brand.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n    \r\n        this.setState({ Username: results });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <div className=\"container-main\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"1\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"content-section\">\r\n                        <div className=\"content-div\">\r\n                            <div className=\"main-header\">\r\n                                <HomeIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Home</h2>\r\n                            </div>\r\n                            {this.state.Post.map(post => {\r\n                                return (\r\n                                    <Tile Title={post.Title} Body={post.Body} Name={post.Name} Email={post.Email} isLiked={this.state.MyLikes}/>\r\n                                )\r\n                            })}\r\n\r\n                            {this.state.Post.length <= 7 && this.state.Post.length > 0 ? \r\n                                <section className=\"suggest-follow\">\r\n                                    <h1>You're feed looks a little empty, try adding users with the searchbar or through Explore</h1>\r\n                                </section> \r\n                            : null}\r\n\r\n                            {this.state.Post.length === 0 && this.state.isEmpty ? \r\n                                <section className=\"suggest-follow\">\r\n                                    <h1>You're feed is empty, try adding users with the searchbar or through Explore</h1>\r\n                                </section> \r\n                            : null}\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-main\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport '../Css/Create.css';\r\nimport { Form, Button, Spinner } from 'react-bootstrap';\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Title: '',\r\n            Body: '',\r\n            Loading: false,\r\n            TitleError: 'white',\r\n            BodyError: 'white',\r\n            isTitleError: false,\r\n            isBodyError: false\r\n        }\r\n\r\n        this.submitPost = this.submitPost.bind(this);\r\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\r\n    }\r\n\r\n    submitPost() {\r\n        this.setState({Loading: true});\r\n        let isError = false;\r\n        if(this.state.Title === '') {\r\n            console.log(this.state.Title);\r\n            this.setState({TitleError: \"red\", isTitleError: true});\r\n            isError = true;\r\n        }\r\n        \r\n        if(this.state.Body === '') {\r\n            this.setState({BodyError: \"red\", isBodyError: true, Loading: false});\r\n            return;\r\n        }\r\n\r\n        if(isError) {\r\n            this.setState({Loading: false})\r\n            return;\r\n        }\r\n\r\n        fetch(\"/backend/create\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: this.state.Title,\r\n                body: this.state.Body\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({Loading: false});\r\n                this.props.history.push('/home');\r\n            });\r\n    }\r\n\r\n    renderErrorMessage() {\r\n        if(this.state.isTitleError === false && \r\n            this.state.isBodyError === false) {\r\n            console.log(\"here\");\r\n            return;\r\n        }\r\n\r\n        let titleErr = ''\r\n        let bodyErr = '';\r\n\r\n        if(this.state.isTitleError) {\r\n            titleErr = 'Please fill out the title textfield'\r\n        }\r\n\r\n        if(this.state.isBodyError) {\r\n            bodyErr = 'Please fill out the body textfield'\r\n        }\r\n\r\n        return (\r\n            <div className=\"error-div\">\r\n                <h1>{titleErr}</h1>\r\n                <h1>{bodyErr}</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"post\">\r\n            {this.renderErrorMessage()}\r\n                <div className=\"post-body\">\r\n                    <div className=\"title-create\" style={{color: this.state.TitleError}}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"1\" \r\n                                onChange={(e) => this.setState({Title: e.target.value, TitleError: 'white', isTitleError: false})}\r\n                                maxLength={\"70\"}\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"body-create\" style={{color: this.state.BodyError}}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Your Post</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"14\" \r\n                                onChange={(e) => this.setState({Body: e.target.value, BodyError: 'white', isBodyError: false})}/>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"create-button\">\r\n                        <Button className=\"w-50\" onClick={() => this.submitPost()} size=\"lg\">\r\n                            {this.state.Loading ? <Spinner animation=\"border\" variant=\"light\" /> : \"Create\"}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nexport default function SimpleMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <MoreHorizIcon fontSize=\"large\" />\r\n      </Button>\r\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  <MenuItem onClick={handleClose}>My Profile</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n  </div>\r\n  );\r\n}","import React from 'react';\r\nimport '../Css/Profile.css';\r\nimport Background from '../Images/Background.jpg';\r\nimport Navigation from '../Components/Navigation';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport SimpleMenu from '../Components/MenuItem';\r\nimport ProfileIcon from '../Images/download.png';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Tile from '../Components/Tile';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Posts: [],\r\n            Email: this.props.location.state.name,\r\n            MyLikes: [],\r\n            Follower: false,\r\n            Following: 0,\r\n            Followers: 0,\r\n            ReadOnly: true,\r\n            Bio: '',\r\n            Profile: {},\r\n            Anchor: null\r\n        }\r\n\r\n        this.followClick = this.followClick.bind(this);\r\n        this.unfollowClick = this.unfollowClick.bind(this);\r\n        this.redirectFollows = this.redirectFollows.bind(this);\r\n        this.saveBio = this.saveBio.bind(this);\r\n    }\r\n\r\n    followClick() {\r\n        Promise.all([\r\n            fetch(`/users/follow`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userEmail: sessionStorage.getItem('Email'),\r\n                    profileEmail: this.state.Email\r\n                })\r\n            }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Follower: data})\r\n            }),\r\n    \r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ]).then();\r\n    }\r\n\r\n    unfollowClick() {\r\n        Promise.all([\r\n            fetch(`/users/unfollow`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userEmail: sessionStorage.getItem('Email'),\r\n                    profileEmail: this.state.Email\r\n                })\r\n            }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Follower: false});\r\n            }),\r\n    \r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ]).then();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const email = this.props.location.state.name\r\n        Promise.all([\r\n            fetch(`/backend/posts/${email}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n                }).then(response => response.json()).then(data => {\r\n                this.setState({ Posts: data });    \r\n            }),\r\n\r\n            fetch(\"/backend/mylikes\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data}, () => {\r\n                    console.log(this.state.MyLikes);\r\n                });\r\n            }).catch(error => {\r\n                    console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/settings/information\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                this.setState({Profile: data});\r\n            }).catch(error => {\r\n                    console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/followlist\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                if(data.includes(this.state.Email)) {\r\n                    console.log(data);\r\n                    this.setState({Follower: true});\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'following'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Following: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    redirectFollows(tab) {\r\n        if(tab === 'followers') {\r\n            console.log(\"here\");\r\n            this.props.history.push(`/profile/${this.state.Email}/followers`);\r\n        } else {\r\n            this.props.history.push(`/profile/${this.state.Email}/following`);    \r\n        }\r\n    }\r\n\r\n    saveBio(e) {\r\n        console.log(this.state.ReadOnly);\r\n        this.setState({ReadOnly: !this.state.ReadOnly}, () => {\r\n            if(this.state.ReadOnly) {\r\n                fetch(\"/settings/bio\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    bio: this.state.Bio\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n            }\r\n        })   \r\n    }\r\n\r\n    render() {\r\n        const getCurrentEmail = sessionStorage.getItem(\"Email\");\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-layout\">\r\n                    <section className=\"profile-navbar\">\r\n                        <Navigation eventKey=\"4\" />\r\n                    </section>\r\n\r\n                    <div className=\"border-line-profile\">\r\n                        <section className=\"image-background\">\r\n                            <img src={Background} alt=\"Background\" />\r\n                            <div className=\"profile-icon\">\r\n                                <img src={ProfileIcon} width=\"160vw\" height=\"150vh\" alt=\"Profile icon\" />\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"biography\">\r\n                            <div className=\"profile-name\">\r\n                                <h2>{this.state.Profile.Name}</h2>\r\n                                {this.state.Email !== sessionStorage.getItem('Email') ? null : \r\n                                <CreateIcon style={{marginLeft: 'calc(1vw)', cursor: 'pointer'}} className=\"edit-profile\" \r\n                                onClick={(e) => this.saveBio()}/>}\r\n                                {this.state.Email === getCurrentEmail ? \r\n                                    <div className=\"menu-icon\">\r\n                                        <SimpleMenu />\r\n                                    </div> : \r\n                                    (this.state.Follower ?\r\n                                        <button className=\"followed-button\" onClick={() => this.unfollowClick()}>\r\n                                            Followed <CheckIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"checked-icon\" />\r\n                                        </button> \r\n                                        : \r\n                                        <button className=\"follow-button\" onClick={() => this.followClick()}>\r\n                                            Follow <AddIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"plus-icon\" />\r\n                                        </button> \r\n                                    )  \r\n                                }\r\n                            </div>\r\n                            \r\n                            <div className=\"description\">\r\n                                <p>\r\n                                    <Form.Control plaintext={this.state.ReadOnly} readOnly={this.state.ReadOnly} defaultValue={this.state.Profile.Bio} \r\n                                        as=\"textarea\" rows=\"4\" style={{width: 'calc(20vw)', color: 'white', backgroundColor: 'rgb(21, 32, 43)'}} \r\n                                        onChange={(e) => this.setState({Bio: e.target.value})}\r\n                                        maxLength=\"210\"\r\n                                    />  \r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"followers\">\r\n                                <h2 onClick={() => this.redirectFollows(\"followers\")}>{this.state.Followers} Followers</h2>\r\n                                <span>|</span>\r\n                                <h2 onClick={() => this.redirectFollows(\"following\")}>{this.state.Following} Following</h2>   \r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"post-div\">\r\n                            <div className=\"post-display\">\r\n                                {this.state.Posts.map(post => {\r\n                                    return (\r\n                                        <Tile Title={post.Title} Body={post.Body} Name={post.Name} isLiked={this.state.MyLikes} Email={post.Email}/>\r\n                                    )\r\n                                })}  \r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <section className=\"searchbar-profile\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default class StateList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form.Control as=\"select\" placeHolder=\"Select State\" onChange={(e) => this.props.selected(e.target.value)}>\r\n        <option value=\"AL\">Alabama</option>\r\n        <option value=\"AK\">Alaska</option>\r\n        <option value=\"AZ\">Arizona</option>\r\n        <option value=\"AR\">Arkansas</option>\r\n        <option value=\"CA\">California</option>\r\n        <option value=\"CO\">Colorado</option>\r\n        <option value=\"CT\">Connecticut</option>\r\n        <option value=\"DE\">Delaware</option>\r\n        <option value=\"DC\">District Of Columbia</option>\r\n        <option value=\"FL\">Florida</option>\r\n        <option value=\"GA\">Georgia</option>\r\n        <option value=\"HI\">Hawaii</option>\r\n        <option value=\"ID\">Idaho</option>\r\n        <option value=\"IL\">Illinois</option>\r\n        <option value=\"IN\">Indiana</option>\r\n        <option value=\"IA\">Iowa</option>\r\n        <option value=\"KS\">Kansas</option>\r\n        <option value=\"KY\">Kentucky</option>\r\n        <option value=\"LA\">Louisiana</option>\r\n        <option value=\"ME\">Maine</option>\r\n        <option value=\"MD\">Maryland</option>\r\n        <option value=\"MA\">Massachusetts</option>\r\n        <option value=\"MI\">Michigan</option>\r\n        <option value=\"MN\">Minnesota</option>\r\n        <option value=\"MS\">Mississippi</option>\r\n        <option value=\"MO\">Missouri</option>\r\n        <option value=\"MT\">Montana</option>\r\n        <option value=\"NE\">Nebraska</option>\r\n        <option value=\"NV\">Nevada</option>\r\n        <option value=\"NH\">New Hampshire</option>\r\n        <option value=\"NJ\">New Jersey</option>\r\n        <option value=\"NM\">New Mexico</option>\r\n        <option value=\"NY\">New York</option>\r\n        <option value=\"NC\">North Carolina</option>\r\n        <option value=\"ND\">North Dakota</option>\r\n        <option value=\"OH\">Ohio</option>\r\n        <option value=\"OK\">Oklahoma</option>\r\n        <option value=\"OR\">Oregon</option>\r\n        <option value=\"PA\">Pennsylvania</option>\r\n        <option value=\"RI\">Rhode Island</option>\r\n        <option value=\"SC\">South Carolina</option>\r\n        <option value=\"SD\">South Dakota</option>\r\n        <option value=\"TN\">Tennessee</option>\r\n        <option value=\"TX\">Texas</option>\r\n        <option value=\"UT\">Utah</option>\r\n        <option value=\"VT\">Vermont</option>\r\n        <option value=\"VA\">Virginia</option>\r\n        <option value=\"WA\">Washington</option>\r\n        <option value=\"WV\">West Virginia</option>\r\n        <option value=\"WI\">Wisconsin</option>\r\n        <option value=\"WY\">Wyoming</option>\r\n      </Form.Control>   \r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../Css/Login.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap'; \r\nimport State from '../Components/StatesSignup';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: '',\r\n      Email: '',\r\n      Password: '',\r\n      State: 'AL',\r\n      Loading: false\r\n    }\r\n\r\n    this.signUpRequest = this.signUpRequest.bind(this);\r\n    this.setUserState = this.setUserState.bind(this);\r\n  }\r\n\r\n  signUpRequest() {\r\n    console.log(this.state.Email);\r\n    console.log(this.state.Password);\r\n    console.log(this.state.Name);\r\n    this.setState({ Loading: true});\r\n    fetch(\"/users/register\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: this.state.Name,\r\n        email: this.state.Email,\r\n        password: this.state.Password,\r\n        state: this.state.State\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json()).then(data => {\r\n        this.setState({Loading: false})\r\n        console.log(data);    \r\n        sessionStorage.setItem('Email', data.Email);\r\n        sessionStorage.setItem('Name', data.Name);\r\n        this.props.history.push('/home');\r\n        console.log(\"here\"); \r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  setUserState(value) {\r\n    this.setState({State: value}, () => console.log(this.state.State));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"Login\">\r\n          <div className=\"login-form\">\r\n            <Container>\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                   <h2>SIGN UP</h2>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Name</Form.Label></div>\r\n                      <Form.Control type=\"text\" placeholder=\"Enter name\" \r\n                      onChange={(e) => this.setState({ Name: e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>State</Form.Label></div>\r\n                      <State selected={this.setUserState} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Email address</Form.Label></div>\r\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                      onChange={(e) => this.setState({ Email: e.target.value})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                      <div><Form.Label>Password</Form.Label></div>\r\n                      <Form.Control type=\"password\" placeholder=\"Password\" \r\n                        onChange={(e) => this.setState({ Password: e.target.value })}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <Button variant=\"primary\" className=\"mt-2\" size=\"lg\" block\r\n                  onClick={() => this.signUpRequest()}>{this.state.Loading ? <Spinner animation=\"border\" role=\"status\"/> : \"Sign up\" }</Button>\r\n                  {' '}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 3, offset: 6}}>\r\n                  <footer className=\"user-login\"><button className=\"user-login-btn\"\r\n                  onClick={() => this.props.history.push('/')}>Already a user? Login</button></footer>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from 'react';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport '../Css/Node.css';\r\n\r\nexport default function Node(props) {\r\n\r\n    const [name, setName] = useState({Name: ''});\r\n    const [email, setEmail] = useState({Email: ''});\r\n    const [bio, setBio] = useState({Bio: ''})\r\n    const [follower, setFollower] = useState({Following: false});\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        fetch(\"/users/username\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: props.email\r\n            })\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            setName({Name: data.Name});\r\n            setBio({Bio: data.Bio});\r\n            setEmail({Email: data.Email})\r\n            fetch(\"/backend/followlist\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                if(data.includes(props.user)) {\r\n                    console.log(data);\r\n                    setFollower({Follower: true});\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        })\r\n\r\n        if(props.getName) {\r\n            setName({Name: props.getName})\r\n        }\r\n    }, []);\r\n\r\n    const followClick = () => {\r\n        fetch(`/users/follow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: props.user\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                setFollower({Follower: data});\r\n            })\r\n    }\r\n\r\n    const unfollowClick = () => {\r\n        fetch(`/users/unfollow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: props.user\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                setFollower({Follower: false})\r\n            })\r\n    }\r\n\r\n    const profile = () => {\r\n        history.push({\r\n           pathname: `/profile/${name.Name}`,\r\n           query: '?user=user',\r\n           state: { name: email.Email}\r\n        })\r\n    }\r\n\r\n    const button = () => {\r\n        if(props.showFollow) {\r\n            return;\r\n        }\r\n\r\n        const val = props.following === 'ME' ? null :\r\n            <section className=\"followed-button-section\">\r\n                {(props.following !== 'No Followers' && props.following) || follower.Follower ? \r\n                <button className=\"followed-button-node\" onClick={() => unfollowClick()}>\r\n                    Followed <CheckIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"checked-icon\" />\r\n                </button> : \r\n                <button className=\"follow-button-node\" onClick={() => followClick()}>\r\n                    Follow <AddIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"plus-icon\" />\r\n                </button> }\r\n            </section>   \r\n            \r\n        return val;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"node-container\">\r\n            <section className=\"information\" onClick={() => profile()}>\r\n                <AccountCircleIcon color=\"primary\" style={{fontSize: 'calc(2.5vw)'}} />\r\n                <h2>{props.name ? props.name : name.Name}</h2>\r\n            </section>\r\n\r\n            <section className=\"bio\" onClick={() => profile()}>\r\n                <h4>{props.bio ? props.bio : bio.Bio}</h4>\r\n            </section>\r\n\r\n            {/* {props.following === 'ME' ? null : \r\n            <section className=\"followed-button-section\">\r\n                {(props.following !== 'No Followers' && props.following) || follower.Follower ? \r\n                <button className=\"followed-button-node\" onClick={() => unfollowClick()}>\r\n                    Followed <CheckIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"checked-icon\" />\r\n                </button> : \r\n                <button className=\"follow-button-node\" onClick={() => followClick()}>\r\n                    Follow <AddIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"plus-icon\" />\r\n                </button> }\r\n            </section>} */}\r\n            {button()}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Navigation from '../Components/Navigation';\r\nimport Node from '../Components/Node';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport '../Css/Users.css';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Email: this.props.match.params.email,\r\n            Followers: [],\r\n            Following: [],\r\n            UserFollowing: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'following'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Following: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                    follow: 'following'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(\"Here: \", data);\r\n                this.setState({UserFollowing: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.match.params.follow);\r\n        console.log(this.state.Following);\r\n        return (\r\n            <div className=\"users\">\r\n                <div className=\"users-layout\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"4\" />\r\n                    </section>\r\n\r\n                    <div className=\"profile-goback\">\r\n                        <button onClick={() => this.props.history.push(`/profile/${this.props.match.params.email}`)}> \r\n                            <i className=\"pi pi-caret-left\" style={{fontSize: 'calc(1.1rem)', paddingRight: 'calc(0.3vw)'}}></i>Return to profile\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"border-line\">\r\n                        <section className=\"user-section\">\r\n                            <div className=\"user-tab\">\r\n                                <button onClick={() => this.props.history.push(`/profile/${this.state.Email}/followers`)}>Followers</button>\r\n                                <button onClick={() => this.props.history.push(`/profile/${this.state.Email}/following`)}>Following</button>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"user-div\">\r\n                            <div className=\"user-display\">\r\n                                {this.props.match.params.follow === 'followers' ? \r\n                                    this.state.Followers.map(follower => {\r\n                                        let isFollowing = false;\r\n                                        if(follower === sessionStorage.getItem('Email')) {\r\n                                            isFollowing = \"ME\"\r\n                                        } else if(this.state.Followers .length === 0) {\r\n                                            isFollowing = \"No Followers\";\r\n                                        } else if(this.state.Followers.includes(follower)) {\r\n                                            isFollowing = true;\r\n                                        }\r\n\r\n                                        return <Node user={follower} email={follower} following={isFollowing}/> }) \r\n                                    : \r\n                                    \r\n                                    this.state.Following.map(following => {\r\n                                        let isFollowing = false;\r\n                                        if(following === sessionStorage.getItem('Email')) {\r\n                                            isFollowing = \"ME\"\r\n                                        } else if(this.state.Followers.length === 0) {\r\n                                            isFollowing = \"No Followers\";\r\n                                        } else if(this.state.UserFollowing.includes(following)) {\r\n                                            isFollowing = true;\r\n                                        }\r\n                                        return ( <Node user={this.state.Email} email={following} following={isFollowing} /> )\r\n                                }) }\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <section className=\"searchbar-section\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Users;","import React from 'react'\r\nimport '../Css/Main.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Tile from '../Components/Tile';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\n\r\nclass Explore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: []\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n        fetch(\"/backend/loadposts\")\r\n        .then(response => response.json()).then(data => {  \r\n            this.setState({ Post: data });\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        }),   \r\n        \r\n        fetch(\"/backend/mylikes\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: sessionStorage.getItem('Email'),\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({ MyLikes: data}, () => {\r\n                    console.log(this.state.MyLikes);\r\n                });\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n        ]) .then(console.log(\"hello\"));\r\n    }\r\n\r\n    createPost() {\r\n        this.props.history.push(`/create`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"explorepage\">\r\n                <div className=\"container-explore\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"2\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"explore-section\">\r\n                        <div className=\"explore-content-div\">\r\n                            <div className=\"explore-header\">\r\n                                <ExploreIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Explore</h2>\r\n                            </div>\r\n                            {this.state.Post.map(post => {\r\n                                if(post.Email === sessionStorage.getItem('Email')) {\r\n                                    return;\r\n                                } else {\r\n                                    return (\r\n                                        <Tile Title={post.Title} Body={post.Body} Name={post.Name} Email={post.Email} isLiked={this.state.MyLikes}/>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-section\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Explore;","import React from 'react';\r\nimport '../Css/Post.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Favorite from '../Components/Favorite';\r\nimport { Media, Form, Button } from 'react-bootstrap';\r\nimport ProfileIcon from '../Images/download.png';\r\n\r\nclass Post extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Post: {\r\n                name: '',\r\n                post: {\r\n                    Title: '',\r\n                    Body: ''\r\n                }\r\n            },\r\n            Comment: '',\r\n            CommentPost: []\r\n        }\r\n\r\n        this.enterComment = this.enterComment.bind(this);\r\n        this.compareObjects = this.compareObjects.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getEmail = this.props.location.state.name;\r\n        const getTitle = this.props.location.state.title;\r\n\r\n        Promise.all([\r\n            fetch(\"/backend/getpost\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Post: data});\r\n                console.log(data.post.Title)\r\n                console.log(this.state.Post.post.Title );\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"/backend/getcomment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({CommentPost: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const getEmail = this.props.location.state.name;\r\n        const getTitle = this.props.location.state.title;\r\n\r\n        fetch(\"/backend/getcomment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data)\r\n                console.log(this.state.CommentPost);\r\n                console.log(this.compareObjects(data, this.state.CommentPost));\r\n                if(this.compareObjects(data, this.state.CommentPost)) {\r\n                    //Do nothing, avoid infinite loop\r\n                } else {\r\n                    this.setState({CommentPost: data});\r\n                    return;\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })    \r\n    }\r\n\r\n    enterComment() {\r\n        const getEmail = this.props.location.state.name;\r\n        const getTitle = this.props.location.state.title;\r\n\r\n        fetch(\"/backend/comment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle,\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                comments: this.state.Comment\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Comment: ''});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n    }\r\n\r\n    compareObjects(objOne, objTwo) {\r\n        let objectsAreSame = true;\r\n        for(let obj in objOne) {\r\n            if(objOne[obj].Comment !== objTwo[obj].Comment) {\r\n                objectsAreSame = false;\r\n                break;\r\n            }\r\n        }\r\n        return objectsAreSame;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"postpage\">\r\n                <div className=\"post-container\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation />\r\n                    </section>\r\n\r\n                    <section className=\"post-section\">\r\n                        <section className=\"post-style\">\r\n                            <div className=\"user-information-post\">\r\n                                <Media>\r\n                                    <img\r\n                                        width={64}\r\n                                        height={64}\r\n                                        className=\"mr-3\"\r\n                                        src={ProfileIcon}\r\n                                        alt=\"Generic placeholder\"\r\n                                    />\r\n                                    <Media.Body>\r\n                                        <h3 className=\"userinfo-name\">{this.state.Post.name}</h3>\r\n                                    </Media.Body>\r\n                                </Media>\r\n\r\n                                <div className=\"fav-icon\">\r\n                                    <Favorite Title={this.props.location.state.title} Email={this.props.location.state.name} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"post-title\">\r\n                                <h1>{this.state.Post.post.Title}</h1>\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"post-paragraph\">\r\n                                <h1>{this.state.Post.post.Body}</h1>\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n\r\n                    <section className='comment-section'>\r\n                        <div className=\"comment-header\">\r\n                            <h1>Comments</h1>\r\n                            <hr />\r\n                        </div>\r\n\r\n                        <div className=\"comment-box\">\r\n                            <Form.Control  placeHolder={\"Enter comment...\"}\r\n                                value={this.state.Comment}\r\n                                as=\"textarea\" rows=\"4\" \r\n                                style={{width: 'calc(18vw)', color: 'white', backgroundColor: 'rgb(21, 32, 43)', marginLeft: 'calc(1.2vw)'}} \r\n                                onChange={(e) => this.setState({Comment: e.target.value})}\r\n                                maxLength=\"275\"\r\n                            /> \r\n                            <Button variant=\"dark\" onClick={() => this.enterComment()}>Comment</Button>{' '}\r\n                            <hr style={{width: 'calc(95%)'}}/> \r\n                        </div>\r\n\r\n                        {this.state.CommentPost.map(comment => {\r\n                            return (\r\n                                <div className=\"comment-tile\">\r\n                                    <h1>{comment.Name}</h1>\r\n                                    <p>{comment.Comment}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 150,\r\n    maxWidth: 150,\r\n    marginLeft: theme.spacing(50),\r\n    color: 'white',\r\n  },\r\n  inputLabel: {\r\n    color: 'white',\r\n    fontSize: 'calc(0.8vw)'\r\n  },\r\n  selectClass: {\r\n    marginTop: 'calc(0.7vh)',\r\n    height: 'calc(4vh)',\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nexport default function States(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({States: []});\r\n  \r\n    const handleChange = (event) => {\r\n        if(event.target.value.includes(\"\")) {\r\n            props.selected([]);\r\n            setState({States: []});\r\n            return;\r\n        }\r\n        setState({States: event.target.value});\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(state.States.length === 0) {\r\n            return;\r\n        }\r\n\r\n        fetch(\"/users/usersnear\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                statelist: state.States,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }   \r\n        }).then(response => response.json()).then(data => {\r\n            console.log(data);\r\n            props.selected(data);\r\n        })\r\n    }, [state])\r\n  \r\n    return (\r\n      <div>\r\n        <FormControl variant=\"filled\" className={classes.formControl}>\r\n          <InputLabel className={classes.inputLabel} id=\"demo-simple-select-outlined-label\">State</InputLabel>\r\n          <Select\r\n            className={classes.selectClass}\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={state.States}\r\n            onChange={handleChange}\r\n            multiple={true}\r\n          >\r\n            <MenuItem value=\"\">Clear States</MenuItem>\r\n            <MenuItem value=\"AL\">Alabama</MenuItem>\r\n            <MenuItem value=\"AK\">Alaska</MenuItem>\r\n            <MenuItem value=\"AZ\">Arizona</MenuItem>\r\n            <MenuItem value=\"AR\">Arkansas</MenuItem>\r\n            <MenuItem value=\"CA\">California</MenuItem>\r\n            <MenuItem value=\"CO\">Colorado</MenuItem>\r\n            <MenuItem value=\"CT\">Connecticut</MenuItem>\r\n            <MenuItem value=\"DE\">Delaware</MenuItem>\r\n            <MenuItem value=\"DC\">District Of Columbia</MenuItem>\r\n            <MenuItem value=\"FL\">Florida</MenuItem>\r\n            <MenuItem value=\"GA\">Georgia</MenuItem>\r\n            <MenuItem value=\"HI\">Hawaii</MenuItem>\r\n            <MenuItem value=\"ID\">Idaho</MenuItem>\r\n            <MenuItem value=\"IL\">Illinois</MenuItem>\r\n            <MenuItem value=\"IN\">Indiana</MenuItem>\r\n            <MenuItem value=\"IA\">Iowa</MenuItem>\r\n            <MenuItem value=\"KS\">Kansas</MenuItem>\r\n            <MenuItem value=\"KY\">Kentucky</MenuItem>\r\n            <MenuItem value=\"LA\">Louisiana</MenuItem>\r\n            <MenuItem value=\"ME\">Maine</MenuItem>\r\n            <MenuItem value=\"MD\">Maryland</MenuItem>\r\n            <MenuItem value=\"MA\">Massachusetts</MenuItem>\r\n            <MenuItem value=\"MI\">Michigan</MenuItem>\r\n            <MenuItem value=\"MN\">Minnesota</MenuItem>\r\n            <MenuItem value=\"MS\">Mississippi</MenuItem>\r\n            <MenuItem value=\"MO\">Missouri</MenuItem>\r\n            <MenuItem value=\"MT\">Montana</MenuItem>\r\n            <MenuItem value=\"NE\">Nebraska</MenuItem>\r\n            <MenuItem value=\"NV\">Nevada</MenuItem>\r\n            <MenuItem value=\"NH\">New Hampshire</MenuItem>\r\n            <MenuItem value=\"NJ\">New Jersey</MenuItem>\r\n            <MenuItem value=\"NM\">New Mexico</MenuItem>\r\n            <MenuItem value=\"NY\">New York</MenuItem>\r\n            <MenuItem value=\"NC\">North Carolina</MenuItem>\r\n            <MenuItem value=\"ND\">North Dakota</MenuItem>\r\n            <MenuItem value=\"OH\">Ohio</MenuItem>\r\n            <MenuItem value=\"OK\">Oklahoma</MenuItem>\r\n            <MenuItem value=\"OR\">Oregon</MenuItem>\r\n            <MenuItem value=\"PA\">Pennsylvania</MenuItem>\r\n            <MenuItem value=\"RI\">Rhode Island</MenuItem>\r\n            <MenuItem value=\"SC\">South Carolina</MenuItem>\r\n            <MenuItem value=\"SD\">South Dakota</MenuItem>\r\n            <MenuItem value=\"TN\">Tennessee</MenuItem>\r\n            <MenuItem value=\"TX\">Texas</MenuItem>\r\n            <MenuItem value=\"UT\">Utah</MenuItem>\r\n            <MenuItem value=\"VT\">Vermont</MenuItem>\r\n            <MenuItem value=\"VA\">Virginia</MenuItem>\r\n            <MenuItem value=\"WA\">Washington</MenuItem>\r\n            <MenuItem value=\"WV\">West Virginia</MenuItem>\r\n            <MenuItem value=\"WI\">Wisconsin</MenuItem>\r\n            <MenuItem value=\"WY\">Wyoming</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nimport '../Css/Area.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Node from '../Components/Node';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport States from '../Components/States';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: [],\r\n            GetStates: [],\r\n            Username: null,\r\n            UsernamesList: [],\r\n            isEmpty: false\r\n        }\r\n\r\n        this.states = this.states.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(\"/backend/mylikes\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data }, () => {\r\n                    console.log(this.state.MyLikes);\r\n                    sessionStorage.setItem('mylikes', JSON.stringify(this.state.MyLikes));\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.setState({isEmpty: true})\r\n                }, 1000);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n        ]).then();\r\n    }\r\n\r\n    displayUsernames(event) {\r\n        let results = this.state.UsernamesList.filter((brand) => {\r\n             return brand.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n    \r\n        this.setState({ Username: results });\r\n    }\r\n\r\n    states(value) {\r\n        this.setState({GetStates: value}, () => console.log(this.state.GetStates));\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"area-page\">\r\n                <div className=\"container-area\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"3\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"content-section\">\r\n                        <div className=\"content-div\">\r\n                            <div className=\"area-header\">\r\n                                <PublicIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Area Explore</h2>\r\n                                <States selected={this.states}/>\r\n                            </div>\r\n                            {this.state.GetStates.map(post => {\r\n                                return (\r\n                                    <Node email={post.Email} name={post.Name} bio={post.Bio} showFollow={true} />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-main\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './Pages/Login';\nimport Main from './Pages/Main';\nimport Create from './Pages/Create';\nimport Profile from './Pages/Profile';\nimport Signup from './Pages/Signup';\nimport Users from './Pages/Users';\nimport Explore from './Pages/Explore';\nimport Post from './Pages/Post';\nimport Area from './Pages/Area';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route exact path=\"/area\" component={Area} />\n          <Route path=\"/home\" component={Main} />\n          <Route path=\"/create\" component={Create} />\n          <Route exact path=\"/profile/:email\" component={Profile} />\n          <Route exact path=\"/profile/:email/:follow\" component={Users} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/explore\" component={Explore} />\n          <Route path=\"/post/:email/:title\" component={Post} />\n        </Switch>  \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/download.2e1ce79c.png\";","module.exports = __webpack_public_path__ + \"static/media/Background.924e6a0a.jpg\";"],"sourceRoot":""}