{"version":3,"sources":["Pages/Login.js","Components/DrawerItem.js","Components/Navigation.js","Components/Favorite.js","Components/Tile.js","Components/Searchbar.js","Pages/Main.js","Pages/Create.js","Components/MenuItem.js","Pages/Profile.js","Pages/Signup.js","Components/Node.js","Pages/Users.js","Pages/Explore.js","Pages/Post.js","Pages/Area.js","App.js","serviceWorker.js","index.js","Images/download.png","Images/Background.jpg"],"names":["Login","props","state","ModalShow","Email","Password","displayModal","bind","loginRequest","console","log","this","fetch","method","body","JSON","stringify","email","password","headers","then","response","json","data","sessionStorage","setItem","Uid","Name","history","push","catch","error","Modal","size","aria-labelledby","centered","show","onHide","setState","Header","closeButton","Title","id","Body","className","Container","Row","Col","md","span","offset","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Button","variant","block","onClick","React","Component","DrawerItem","getItem","useHistory","handler","role","IconButton","Divider","List","ListItem","button","key","window","location","reload","ListItemIcon","ListItemText","primary","text","Navigation","useState","Right","right","setRight","Nav","defaultActiveKey","eventKey","Link","SwipeableDrawer","anchor","open","onClose","onOpen","Favorite","favorite","setFavorite","Likes","likes","setLikes","loadTotalLikes","title","useEffect","getMyLikes","parse","parseMyLikes","undefined","includes","checkIsLiked","color","style","fontSize","currentEmail","currEmail","Tile","path","href","Searchbar","event","newValue","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","Usernames","renderSuggestion","escapeRegexCharacters","getSuggestionValue","str","replace","suggestion","escapedValue","trim","regex","RegExp","filter","person","test","query","suggestionText","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","twitter","map","part","index","highlight","inputProps","withRouter","Main","Post","MyLikes","Username","UsernamesList","isEmpty","Promise","all","currUser","setTimeout","results","brand","toLowerCase","startsWith","marginTop","post","isLiked","length","Create","submitPost","as","rows","maxLength","SimpleMenu","setOpen","anchorRef","useRef","handleClose","current","contains","handleListKeyDown","preventDefault","prevOpen","focus","ref","aria-controls","aria-haspopup","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","Profile","Posts","match","params","Follower","Following","Followers","ReadOnly","Bio","Anchor","followClick","unfollowClick","redirectFollows","saveBio","userEmail","profileEmail","follow","tab","bio","getCurrentEmail","src","Background","alt","ProfileIcon","width","height","marginLeft","cursor","marginBottom","plaintext","readOnly","defaultValue","backgroundColor","Loading","signUpRequest","name","Spinner","animation","Node","setName","follower","setFollower","user","following","Users","paddingRight","isFollowing","Explore","createPost","Comment","CommentPost","enterComment","compareObjects","getEmail","getTitle","comments","objOne","objTwo","objectsAreSame","obj","Media","placeHolder","comment","App","exact","component","Area","Signup","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.11006464.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Css/Login.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'; \r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ModalShow: false,\r\n      Email: '',\r\n      Password: ''\r\n    }\r\n\r\n    this.displayModal = this.displayModal.bind(this);\r\n    this.loginRequest = this.loginRequest.bind(this);\r\n  }\r\n\r\n  loginRequest() {\r\n    console.log(this.state.Email);\r\n    console.log(this.state.Password);\r\n    fetch(\"https://bloggers-spot.herokuapp.com/users/login\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: this.state.Email,\r\n        password: this.state.Password\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json()).then(data => {\r\n      console.log(data);    \r\n      sessionStorage.setItem('Email', data.Email);\r\n      sessionStorage.setItem('Uid', data.Uid);\r\n      sessionStorage.setItem('Name', data.Name);\r\n      this.props.history.push('/home');\r\n      console.log(\"here\");\r\n      }).catch(error => {\r\n        console.log(\"Error\");\r\n      });\r\n  }\r\n\r\n  displayModal() {\r\n    return (\r\n      <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={this.state.ModalShow}\r\n      onHide={() => this.setState({ ModalShow: false})}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Enter email to send password reset\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n            consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"Login\">\r\n          <div className=\"login-form\">\r\n            <Container>\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <h2>LOGIN</h2>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Email address</Form.Label></div>\r\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                      onChange={(e) => this.setState({ Email: e.target.value})}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                      <div><Form.Label>Password</Form.Label></div>\r\n                      <Form.Control type=\"password\" placeholder=\"Password\" \r\n                        onChange={(e) => this.setState({ Password: e.target.value })}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <Button variant=\"primary\" className=\"mt-2\" size=\"lg\" block\r\n                  onClick={() => this.loginRequest()}>Login</Button>\r\n                  {' '}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 3, offset: 3}}>\r\n                  <footer className=\"user-register\"><button className=\"user-register-btn\"\r\n                  onClick={() => this.props.history.push('/signup')}>Not a user? Sign up</button></footer>\r\n                </Col>\r\n                \r\n                <Col md={{ span: 3, offset: 1}}>\r\n                  <footer className=\"forgot-password\"><button className=\"forgot-password-btn\" onClick={() => this.setState({ ModalShow: true})}>Forgot Password?</button></footer>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          {this.state.ModalShow ? this.displayModal() : null}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport '../Css/Main.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function DrawerItem(props) { \r\n  const email = sessionStorage.getItem('Email');\r\n  const history = useHistory();\r\n  \r\n  const logout = () => {\r\n    console.log(\"here\");\r\n    fetch(\"https://bloggers-spot.herokuapp.com/users/logout\")\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          console.log(data);\r\n          if(data === 'True') {\r\n            let path = `/`; \r\n            history.push(path);\r\n          }\r\n          \r\n      });\r\n  }\r\n\r\n  const profile = () => {\r\n    history.push(`/profile/${email}`);\r\n    window.location.reload(false);\r\n  }\r\n  \r\n  console.log(props.handler);\r\n  return (\r\n        <div\r\n          className={'right'}\r\n          role=\"presentation\"\r\n        >\r\n          <IconButton onClick={props.handler}>\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <Divider />\r\n          <List>\r\n              <ListItem button key={'Profile'} onClick={profile}>\r\n                <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                <ListItemText primary={'Profile'} />\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n          <List>\r\n              <ListItem button key={'Logout'} onClick={logout}>\r\n                <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                <ListItemText primary={'Logout'} />\r\n              </ListItem>\r\n          </List>\r\n          </List>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport DrawerItem from '../Components/DrawerItem';\r\nimport '../Css/Navigation.css';\r\n\r\nexport default function Navigation(props) {\r\n    const [right, setRight] = useState({Right: false});\r\n    const history = useHistory();\r\n\r\n    const handler = () => {\r\n        setRight({Right: false});    \r\n    }\r\n\r\n    const createPost = (e) => {\r\n        history.push(`/create`);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navigation\">\r\n        <Nav defaultActiveKey={props.eventKey} className=\"flex-column\" >\r\n            <Nav.Link eventKey=\"1\" onClick={(e) => history.push('/home')}>Home</Nav.Link>\r\n            <Nav.Link eventKey=\"2\" onClick={(e) => history.push('/explore')}>Explore</Nav.Link>\r\n            <Nav.Link eventKey=\"3\" onClick={(e) => history.push('/area')}>Area Search</Nav.Link>\r\n            <Nav.Link eventKey=\"4\" onClick={(e) => setRight({Right: true})}>Profile</Nav.Link>\r\n            <Nav.Link eventKey=\"5\" onClick={(e) => createPost()}>Create Post</Nav.Link>\r\n        </Nav>\r\n\r\n        <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={right.Right}\r\n            onClose={() => setRight({ Right: false})}\r\n            onOpen={() => setRight({ Right: true})}\r\n        >\r\n            {<DrawerItem handler={handler}/>}\r\n        </SwipeableDrawer>\r\n    </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'; \r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport '../Css/Favorite.css';\r\n\r\nexport default function Favorite(props) {\r\n\r\n    const [favorite, setFavorite] = useState({Favorite: true});\r\n    const [likes, setLikes] = useState({Likes: 0});\r\n\r\n    const checkIsLiked = () => {\r\n        const getMyLikes = JSON.parse(sessionStorage.getItem('mylikes'));\r\n        const parseMyLikes = JSON.parse(getMyLikes);\r\n        if(parseMyLikes === undefined) {\r\n            return;\r\n        }\r\n        \r\n        if(parseMyLikes.includes(props.Title)) {\r\n            setFavorite({ Favorite: false});\r\n        }   \r\n    }\r\n\r\n    const loadTotalLikes = () => {\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/loadlikes\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.json()).then(data => {\r\n            console.log(data); \r\n            setLikes({Likes: data.Likes});\r\n            \r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });    \r\n    }\r\n\r\n    const like = () => {\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/postlike\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            currentEmail: sessionStorage.getItem('Email'),\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.text()).then(data => {\r\n            console.log(data);    \r\n            loadTotalLikes();\r\n            console.log(\"here\");\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n    const unlike = () => {\r\n        console.log(\"here\");\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/unlike\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            currEmail: sessionStorage.getItem('Email'),\r\n            email: props.Email,\r\n            title: props.Title\r\n        }),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n        }).then(response => response.text()).then(data => {\r\n            console.log(data);    \r\n            loadTotalLikes();\r\n            console.log(\"here\");\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        checkIsLiked();\r\n        loadTotalLikes();\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"display-likes\">\r\n            {likes.Likes <= 0 ? <p>{props.Likes}</p> : <p>{likes.Likes}</p>}\r\n        </div>\r\n        <div className=\"favorite-icon\" onClick={() => setFavorite({Favorite: !favorite.Favorite})}>\r\n            {favorite.Favorite ? \r\n                <FavoriteBorderIcon color=\"light\" style={{fontSize: 'calc(1.5vw)'}} className=\"favorite\" onClick={like}/> \r\n                : \r\n                <FavoriteIcon color=\"light\" style={{fontSize: 'calc(1.5vw)'}} className=\"favorited\" onClick={unlike}/> \r\n            }\r\n        </div>\r\n        </section>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../Css/Tile.css';\r\nimport Favorite from './Favorite.js';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Tile(props) {\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = () => { \r\n        let path = `/profile/${props.Name}`; \r\n        history.push(path);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        console.log(props);\r\n        console.log(\"here\")\r\n        history.push(`/post/${props.Email}/${props.Title}`);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"tile-container\" >\r\n            <section className=\"tile-author\">\r\n                <AccountCircleIcon color=\"light\" style={{fontSize: 'calc(2vw)'}} onClick={routeChange} /> \r\n                <h6 className=\"profile-link\"><a href={`/profile/${props.Name}`}>{props.Name}</a></h6>\r\n                <Favorite Title={props.Title} Email={props.Email} />\r\n            </section>\r\n\r\n            <div onClick={(e) => handleClick(e)}>\r\n                <section className=\"title-section\">\r\n                    <div className=\"title\">\r\n                        <h3>{props.Title}</h3>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"summary-section\">\r\n                    <div className=\"summary\">\r\n                        <h3>{props.Body}</h3>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { withRouter} from 'react-router-dom';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match'\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse'\r\nimport '../Css/Searchbar.css';  \r\n\r\nclass Searchbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            Usernames: []\r\n        };    \r\n\r\n        this.renderSuggestion = this.renderSuggestion.bind(this);\r\n        this.getSuggestions = this.getSuggestions.bind(this);\r\n        this.escapeRegexCharacters = this.escapeRegexCharacters.bind(this);\r\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\r\n    }\r\n\r\n    onChange = (event, { newValue, method }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://bloggers-spot.herokuapp.com/users/getusernames\")\r\n        .then(response => response.json()).then(data => {  \r\n            this.setState({ Usernames: data });\r\n        });\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    escapeRegexCharacters(str) {\r\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    getSuggestionValue(suggestion){\r\n        this.setState({value: suggestion}, () => {\r\n            this.props.history.push(`/profile/${suggestion}`);\r\n        });\r\n        return suggestion;\r\n    } \r\n        \r\n    getSuggestions(value) {\r\n        const escapedValue = this.escapeRegexCharacters(value.trim());\r\n\r\n        if (escapedValue === '') {\r\n            return [];\r\n        }\r\n        \r\n        const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n        \r\n        return this.state.Usernames.filter(person => regex.test(person));\r\n    }\r\n\r\n    renderSuggestion(suggestion, { query }) {\r\n        const suggestionText = suggestion;\r\n        const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n        const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n        \r\n        return (\r\n            <span className={'suggestion-content ' + suggestion.twitter}>\r\n            <span className=\"name\">\r\n                {\r\n                parts.map((part, index) => {\r\n                    const className = part.highlight ? 'highlight' : null;\r\n        \r\n                    return (\r\n                    <span className={className} key={index} onClick={() => console.log(suggestion)}>{part.text}</span>\r\n                    );\r\n                })\r\n                }\r\n            </span>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n        const inputProps = {\r\n            placeholder: \"Find Friends...\",\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        return (\r\n            <Autosuggest \r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={this.getSuggestionValue}\r\n                renderSuggestion={this.renderSuggestion}\r\n                inputProps={inputProps} />\r\n            );\r\n        }\r\n}\r\n\r\nexport default withRouter(Searchbar);","import React from 'react'\r\nimport '../Css/Explore.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Tile from '../Components/Tile';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport { withHistory } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: [],\r\n            Username: null,\r\n            UsernamesList: [],\r\n            isEmpty: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n        fetch(\"https://bloggers-spot.herokuapp.com/users/followerspost\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                currUser: sessionStorage.getItem('Email')\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json()).then(data => {\r\n            this.setState({ Post: data });\r\n        }),\r\n\r\n        fetch(\"https://bloggers-spot.herokuapp.com/users/usersnear\")\r\n        .then(response => response.json()).then(data => {  \r\n            console.log(data);\r\n        }),\r\n        \r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/mylikes\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: sessionStorage.getItem('Email'),\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data }, () => {\r\n                    console.log(this.state.MyLikes);\r\n                    sessionStorage.setItem('mylikes', JSON.stringify(this.state.MyLikes));\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.setState({isEmpty: true})\r\n                }, 1000);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n        ]).then();\r\n    }\r\n\r\n    displayUsernames(event) {\r\n        let results = this.state.UsernamesList.filter((brand) => {\r\n             return brand.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n    \r\n        this.setState({ Username: results });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <div className=\"container-main\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"1\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"content-section\">\r\n                        <div className=\"content-div\">\r\n                            <div className=\"main-header\">\r\n                                <HomeIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Home</h2>\r\n                            </div>\r\n                            {this.state.Post.map(post => {\r\n                                return (\r\n                                    <Tile Title={post.Title} Body={post.Body} Name={post.Name} Email={post.Email} isLiked={this.state.MyLikes}/>\r\n                                )\r\n                            })}\r\n\r\n                            {this.state.Post.length <= 7 && this.state.Post.length > 0 ? \r\n                                <section className=\"suggest-follow\">\r\n                                    <h1>You're feed looks a little empty, try adding users with the searchbar or through Explore</h1>\r\n                                </section> \r\n                            : null}\r\n\r\n                            {this.state.Post.length === 0 && this.state.isEmpty ? \r\n                                <section className=\"suggest-follow\">\r\n                                    <h1>You're feed is empty, try adding users with the searchbar or through Explore</h1>\r\n                                </section> \r\n                            : null}\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-main\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport '../Css/Create.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Title: '',\r\n            Body: '',\r\n            value: ''\r\n        }\r\n\r\n        this.submitPost = this.submitPost.bind(this);\r\n    }\r\n\r\n    submitPost() {\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/create\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: this.state.Title,\r\n                body: this.state.Body\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n            console.log(data);    \r\n            this.setState({value: data});\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"post\">\r\n            {this.state.value}\r\n                <div className=\"post-body\">\r\n                    <div className=\"title\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"1\" onChange={(e) => this.setState({Title: e.target.value})}\r\n                                maxLength={\"70\"}\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"body\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Body</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"13\" onChange={(e) => this.setState({Body: e.target.value})}/>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"create-button\">\r\n                        <Button as=\"input\" type=\"button\" value=\"Create\" onClick={() => this.submitPost()}/>{' '}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nexport default function SimpleMenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <MoreHorizIcon fontSize=\"large\" />\r\n      </Button>\r\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n  </div>\r\n  );\r\n}","import React from 'react';\r\nimport '../Css/Profile.css';\r\nimport Background from '../Images/Background.jpg';\r\nimport Navigation from '../Components/Navigation';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport SimpleMenu from '../Components/MenuItem';\r\nimport ProfileIcon from '../Images/download.png';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Tile from '../Components/Tile';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Posts: [],\r\n            Email: this.props.match.params.email,\r\n            MyLikes: [],\r\n            Follower: false,\r\n            Following: 0,\r\n            Followers: 0,\r\n            ReadOnly: true,\r\n            Bio: '',\r\n            Profile: {},\r\n            Anchor: null\r\n        }\r\n\r\n        this.followClick = this.followClick.bind(this);\r\n        this.unfollowClick = this.unfollowClick.bind(this);\r\n        this.redirectFollows = this.redirectFollows.bind(this);\r\n        this.saveBio = this.saveBio.bind(this);\r\n    }\r\n\r\n    followClick() {\r\n        fetch(`https://bloggers-spot.herokuapp.com/users/follow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: this.state.Email\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Follower: data})\r\n            })\r\n    }\r\n\r\n    unfollowClick() {\r\n        fetch(`https://bloggers-spot.herokuapp.com/users/unfollow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: this.state.Email\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Follower: false})\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const email = this.props.match.params.email\r\n        Promise.all([\r\n            fetch(`https://bloggers-spot.herokuapp.com/backend/posts/${email}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n                }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                console.log(typeof data);\r\n                this.setState({ Posts: data });    \r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/mylikes\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data}, () => {\r\n                    console.log(this.state.MyLikes);\r\n                });\r\n            }).catch(error => {\r\n                    console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/settings/information\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                this.setState({Profile: data});\r\n            }).catch(error => {\r\n                    console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/followlist\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                if(data.includes(this.state.Email)) {\r\n                    console.log(data);\r\n                    this.setState({Follower: true});\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'following'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Following: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data.length});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    redirectFollows(tab) {\r\n        if(tab === 'followers') {\r\n            console.log(\"here\");\r\n            this.props.history.push(`/profile/${this.state.Email}/followers`);\r\n        } else {\r\n            this.props.history.push(`/profile/${this.state.Email}/following`);    \r\n        }\r\n    }\r\n\r\n    saveBio(e) {\r\n        console.log(this.state.ReadOnly);\r\n        this.setState({ReadOnly: !this.state.ReadOnly}, () => {\r\n            if(this.state.ReadOnly) {\r\n                fetch(\"https://bloggers-spot.herokuapp.com/settings/bio\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    bio: this.state.Bio\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n            }\r\n        })   \r\n    }\r\n\r\n    render() {\r\n        const getCurrentEmail = sessionStorage.getItem(\"Email\");\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-layout\">\r\n                    <section className=\"profile-navbar\">\r\n                        <Navigation eventKey=\"4\" />\r\n                    </section>\r\n\r\n                    <div className=\"border-line-profile\">\r\n                        <section className=\"image-background\">\r\n                            <img src={Background} alt=\"Background\" />\r\n                            <div className=\"profile-icon\">\r\n                                <img src={ProfileIcon} width=\"160vw\" height=\"150vh\" alt=\"Profile icon\" />\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"biography\">\r\n                            <div className=\"profile-name\">\r\n                                <h2>{this.state.Profile.Name}</h2>\r\n                                {this.state.Email !== sessionStorage.getItem('Email') ? null : \r\n                                <CreateIcon style={{marginLeft: 'calc(1vw)', cursor: 'pointer'}} className=\"edit-profile\" \r\n                                onClick={(e) => this.saveBio()}/>}\r\n                                {this.state.Email === getCurrentEmail ? \r\n                                    <div className=\"menu-icon\">\r\n                                        <SimpleMenu />\r\n                                    </div> : \r\n                                    (this.state.Follower ?\r\n                                        <button className=\"followed-button\" onClick={() => this.unfollowClick()}>\r\n                                            Followed <CheckIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"checked-icon\" />\r\n                                        </button> \r\n                                        : \r\n                                        <button className=\"follow-button\" onClick={() => this.followClick()}>\r\n                                            Follow <AddIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"plus-icon\" />\r\n                                        </button> \r\n                                    )  \r\n                                }\r\n                            </div>\r\n                            \r\n                            <div className=\"description\">\r\n                                <p>\r\n                                    <Form.Control plaintext={this.state.ReadOnly} readOnly={this.state.ReadOnly} defaultValue={this.state.Profile.Bio} \r\n                                        as=\"textarea\" rows=\"4\" style={{width: 'calc(20vw)', color: 'white', backgroundColor: 'rgb(21, 32, 43)'}} \r\n                                        onChange={(e) => this.setState({Bio: e.target.value})}\r\n                                        maxLength=\"210\"\r\n                                    />  \r\n                                </p>\r\n                            </div>\r\n\r\n                            <div className=\"followers\">\r\n                                <h2 onClick={() => this.redirectFollows(\"followers\")}>{this.state.Followers} Followers</h2>\r\n                                <span>|</span>\r\n                                <h2 onClick={() => this.redirectFollows(\"following\")}>{this.state.Following} Following</h2>   \r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"post-div\">\r\n                            <div className=\"post-display\">\r\n                                {this.state.Posts.map(post => {\r\n                                    return (\r\n                                        <Tile Title={post.Title} Body={post.Body} Name={post.Name} isLiked={this.state.MyLikes} Email={post.Email}/>\r\n                                    )\r\n                                })}  \r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <section className=\"searchbar-profile\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../Css/Login.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap'; \r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: '',\r\n      Email: '',\r\n      Password: '',\r\n      Loading: false\r\n    }\r\n\r\n    this.signUpRequest = this.signUpRequest.bind(this);\r\n  }\r\n\r\n  signUpRequest() {\r\n    console.log(this.state.Email);\r\n    console.log(this.state.Password);\r\n    console.log(this.state.Name);\r\n    this.setState({ Loading: true});\r\n    fetch(\"https://bloggers-spot.herokuapp.com/users/register\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: this.state.Name,\r\n        email: this.state.Email,\r\n        password: this.state.Password\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json()).then(data => {\r\n        this.setState({Loading: false})\r\n        console.log(data);    \r\n        sessionStorage.setItem('Email', data.Email);\r\n        sessionStorage.setItem('Uid', data.Uid);\r\n        sessionStorage.setItem('Name', data.Name);\r\n        this.props.history.push('/home');\r\n        console.log(\"here\"); \r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"Login\">\r\n          <div className=\"login-form\">\r\n            <Container>\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                   <h2>SIGN UP</h2>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Name</Form.Label></div>\r\n                      <Form.Control type=\"text\" placeholder=\"Enter name\" \r\n                      onChange={(e) => this.setState({ Name: e.target.value})}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <div><Form.Label>Email address</Form.Label></div>\r\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                      onChange={(e) => this.setState({ Email: e.target.value})}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                      <div><Form.Label>Password</Form.Label></div>\r\n                      <Form.Control type=\"password\" placeholder=\"Password\" \r\n                        onChange={(e) => this.setState({ Password: e.target.value })}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                  <Button variant=\"primary\" className=\"mt-2\" size=\"lg\" block\r\n                  onClick={() => this.signUpRequest()}>{this.state.Loading ? <Spinner animation=\"border\" role=\"status\"/> : \"Sign up\" }</Button>\r\n                  {' '}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={{ span: 3, offset: 6}}>\r\n                  <footer className=\"user-login\"><button className=\"user-login-btn\"\r\n                  onClick={() => this.props.history.push('/')}>Already a user? Login</button></footer>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from 'react';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useParams } from \"react-router-dom\";\r\nimport '../Css/Node.css';\r\n\r\nexport default function Node(props) {\r\n\r\n    const [name, setName] = useState({Name: ''});\r\n    const [follower, setFollower] = useState({Following: false});\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://bloggers-spot.herokuapp.com/users/username\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: props.email\r\n            })\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            setName({Name: data.Name});\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/followlist\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: sessionStorage.getItem('Email'),\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                if(data.includes(props.user)) {\r\n                    console.log(data);\r\n                    setFollower({Follower: true});\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        })\r\n    }, []);\r\n\r\n    const followClick = () => {\r\n        fetch(`https://bloggers-spot.herokuapp.com/users/follow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: props.user\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                setFollower({Follower: data});\r\n            })\r\n    }\r\n\r\n    const unfollowClick = () => {\r\n        fetch(`https://bloggers-spot.herokuapp.com/users/unfollow`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                profileEmail: props.user\r\n            })\r\n        }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                setFollower({Follower: false})\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"node-container\">\r\n            <section className=\"information\">\r\n                <AccountCircleIcon color=\"primary\" style={{fontSize: 'calc(2.5vw)'}} />\r\n                <h2>{name.Name}</h2>\r\n            </section>\r\n\r\n            <section className=\"bio\">\r\n                <h4>This is a bio that I use for no reason and I am writing filing text to see how this looks and I don'tk now what to say</h4>\r\n            </section>\r\n\r\n            {props.following === 'ME' ? null : \r\n            <section className=\"followed-button-section\">\r\n                {(props.following !== 'No Followers' && props.following) || follower.Follower ? \r\n                <button className=\"followed-button-node\" onClick={() => unfollowClick()}>\r\n                    Followed <CheckIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"checked-icon\" />\r\n                </button> : \r\n                <button className=\"follow-button-node\" onClick={() => followClick()}>\r\n                    Follow <AddIcon color=\"primary\" style={{marginBottom: 'calc(0.4vh)'}} className=\"plus-icon\" />\r\n                </button> }\r\n            </section>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Navigation from '../Components/Navigation';\r\nimport Node from '../Components/Node';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport '../Css/Users.css';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Email: this.props.match.params.email,\r\n            Followers: [],\r\n            Following: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'following'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Following: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/loadprofile\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    follow: 'followers'\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Followers: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.match.params.follow);\r\n        console.log(this.state.Following);\r\n        return (\r\n            <div className=\"users\">\r\n                <div className=\"users-layout\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"4\" />\r\n                    </section>\r\n\r\n                    <div className=\"profile-goback\">\r\n                        <button onClick={() => this.props.history.push(`/profile/${this.props.match.params.email}`)}> \r\n                            <i className=\"pi pi-caret-left\" style={{fontSize: 'calc(1.1rem)', paddingRight: 'calc(0.3vw)'}}></i>Return to profile\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"border-line\">\r\n                        <section className=\"user-section\">\r\n                            <div className=\"user-tab\">\r\n                                <button onClick={() => this.props.history.push(`/profile/${this.state.Email}/followers`)}>Followers</button>\r\n                                <button onClick={() => this.props.history.push(`/profile/${this.state.Email}/following`)}>Following</button>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"user-div\">\r\n                            <div className=\"user-display\">\r\n                                {this.props.match.params.follow === 'followers' ? \r\n                                    this.state.Followers.map(follower => {\r\n                                        let isFollowing = false;\r\n                                        if(follower === sessionStorage.getItem('Email')) {\r\n                                            isFollowing = \"ME\"\r\n                                        } else if(this.state.Following.length === 0) {\r\n                                            isFollowing = \"No Followers\";\r\n                                        } else if(this.state.Following.includes(follower)) {\r\n                                            isFollowing = true;\r\n                                        }\r\n\r\n                                        return <Node user={follower} email={follower} following={isFollowing}/> }) \r\n                                    : \r\n                                    \r\n                                    this.state.Following.map(following => (\r\n                                        <Node user={this.state.Email} email={following} following={true} />\r\n                                    )) }\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <section className=\"searchbar-section\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Users;","import React from 'react'\r\nimport '../Css/Main.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Tile from '../Components/Tile';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport { withHistory } from 'react-router-dom';\r\nimport ExploreIcon from '@material-ui/icons/Explore';\r\n\r\nclass Explore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: []\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/loadposts\")\r\n        .then(response => response.json()).then(data => {\r\n            console.log(data);    \r\n            this.setState({ Post: data });\r\n        }).catch(error => {\r\n            console.log(\"Error\");\r\n        }),   \r\n        \r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/mylikes\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: sessionStorage.getItem('Email'),\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data}, () => {\r\n                    console.log(this.state.MyLikes);\r\n                });\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n        ]) .then(console.log(\"hello\"));\r\n    }\r\n\r\n    createPost() {\r\n        this.props.history.push(`/create`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"explorepage\">\r\n                <div className=\"container-explore\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"2\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"explore-section\">\r\n                        <div className=\"explore-content-div\">\r\n                            <div className=\"explore-header\">\r\n                                <ExploreIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Explore</h2>\r\n                            </div>\r\n                            {this.state.Post.map(post => {\r\n                                if(post.Email === sessionStorage.getItem('Email')) {\r\n                                    return;\r\n                                } else {\r\n                                    return (\r\n                                        <Tile Title={post.Title} Body={post.Body} Name={post.Name} Email={post.Email} isLiked={this.state.MyLikes}/>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-section\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Explore;","import React from 'react';\r\nimport '../Css/Post.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Favorite from '../Components/Favorite';\r\nimport { Media, Form, Button } from 'react-bootstrap';\r\nimport ProfileIcon from '../Images/download.png';\r\n\r\nclass Post extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Post: {\r\n                name: '',\r\n                post: {\r\n                    Title: '',\r\n                    Body: ''\r\n                }\r\n            },\r\n            Comment: '',\r\n            CommentPost: []\r\n        }\r\n\r\n        this.enterComment = this.enterComment.bind(this);\r\n        this.compareObjects = this.compareObjects.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getEmail = this.props.match.params.email;\r\n        const getTitle = this.props.match.params.title;\r\n\r\n        Promise.all([\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/getpost\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({Post: data});\r\n                console.log(data.post.Title)\r\n                console.log(this.state.Post.post.Title );\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }),\r\n\r\n            fetch(\"https://bloggers-spot.herokuapp.com/backend/getcomment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data);\r\n                this.setState({CommentPost: data});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })\r\n        ])\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const getEmail = this.props.match.params.email;\r\n        const getTitle = this.props.match.params.title;\r\n\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/getcomment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.json()).then(data => {\r\n                console.log(data)\r\n                console.log(this.state.CommentPost);\r\n                console.log(this.compareObjects(data, this.state.CommentPost));\r\n                if(this.compareObjects(data, this.state.CommentPost)) {\r\n                    //Do nothing, avoid infinite loop\r\n                } else {\r\n                    this.setState({CommentPost: data});\r\n                    return;\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            })    \r\n    }\r\n\r\n    enterComment() {\r\n        const getEmail = this.props.match.params.email;\r\n        const getTitle = this.props.match.params.title;\r\n\r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/comment\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: getEmail,\r\n                title: getTitle,\r\n                userEmail: sessionStorage.getItem('Email'),\r\n                comments: this.state.Comment\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                console.log(data);\r\n                this.setState({Comment: ''});\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n    }\r\n\r\n    compareObjects(objOne, objTwo) {\r\n        let objectsAreSame = true;\r\n        for(let obj in objOne) {\r\n            if(objOne[obj].Comment !== objTwo[obj].Comment) {\r\n                objectsAreSame = false;\r\n                break;\r\n            }\r\n        }\r\n        return objectsAreSame;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"postpage\">\r\n                <div className=\"post-container\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation />\r\n                    </section>\r\n\r\n                    <section className=\"post-section\">\r\n                        <section className=\"post-style\">\r\n                            <div className=\"user-information-post\">\r\n                                <Media>\r\n                                    <img\r\n                                        width={64}\r\n                                        height={64}\r\n                                        className=\"mr-3\"\r\n                                        src={ProfileIcon}\r\n                                        alt=\"Generic placeholder\"\r\n                                    />\r\n                                    <Media.Body>\r\n                                        <h3 className=\"userinfo-name\">{this.state.Post.name}</h3>\r\n                                    </Media.Body>\r\n                                </Media>\r\n\r\n                                <div className=\"fav-icon\">\r\n                                    <Favorite Title={this.props.match.params.title} Email={this.props.match.params.email} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"post-title\">\r\n                                <h1>{this.state.Post.post.Title}</h1>\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"post-paragraph\">\r\n                                <h1>{this.state.Post.post.Body}</h1>\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n\r\n                    <section className='comment-section'>\r\n                        <div className=\"comment-header\">\r\n                            <h1>Comments</h1>\r\n                            <hr />\r\n                        </div>\r\n\r\n                        <div className=\"comment-box\">\r\n                            <Form.Control  placeHolder={\"Enter comment...\"}\r\n                                value={this.state.Comment}\r\n                                as=\"textarea\" rows=\"4\" \r\n                                style={{width: 'calc(18vw)', color: 'white', backgroundColor: 'rgb(21, 32, 43)', marginLeft: 'calc(1.2vw)'}} \r\n                                onChange={(e) => this.setState({Comment: e.target.value})}\r\n                                maxLength=\"275\"\r\n                            /> \r\n                            <Button variant=\"dark\" onClick={() => this.enterComment()}>Comment</Button>{' '}\r\n                            <hr style={{width: 'calc(95%)'}}/> \r\n                        </div>\r\n\r\n                        {this.state.CommentPost.map(comment => {\r\n                            return (\r\n                                <div className=\"comment-tile\">\r\n                                    <h1>{comment.Name}</h1>\r\n                                    <p>{comment.Comment}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport '../Css/Area.css';\r\nimport Navigation from '../Components/Navigation';\r\nimport Tile from '../Components/Tile';\r\nimport Searchbar from '../Components/Searchbar';\r\nimport { withHistory } from 'react-router-dom';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Right: false,\r\n            Post: [],\r\n            MyLikes: [],\r\n            Username: null,\r\n            UsernamesList: [],\r\n            isEmpty: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n        fetch(\"https://bloggers-spot.herokuapp.com/users/followerspost\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                currUser: sessionStorage.getItem('Email')\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json()).then(data => {\r\n            this.setState({ Post: data });\r\n        }),\r\n        \r\n        fetch(\"https://bloggers-spot.herokuapp.com/backend/mylikes\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: sessionStorage.getItem('Email'),\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n            }).then(response => response.text()).then(data => {\r\n                this.setState({ MyLikes: data }, () => {\r\n                    console.log(this.state.MyLikes);\r\n                    sessionStorage.setItem('mylikes', JSON.stringify(this.state.MyLikes));\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.setState({isEmpty: true})\r\n                }, 1000);\r\n            }).catch(error => {\r\n                console.log(\"Error\");\r\n            }) \r\n        ]).then();\r\n    }\r\n\r\n    displayUsernames(event) {\r\n        let results = this.state.UsernamesList.filter((brand) => {\r\n             return brand.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n    \r\n        this.setState({ Username: results });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"area-page\">\r\n                <div className=\"container-area\">\r\n                    <section className=\"create-section\">\r\n                        <Navigation eventKey=\"3\" />\r\n                    </section>\r\n                    \r\n                    <section className=\"content-section\">\r\n                        <div className=\"content-div\">\r\n                            <div className=\"area-header\">\r\n                                <PublicIcon style={{marginTop: 'calc(0.7vh)'}} fontSize=\"large\" />\r\n                                <h2>Global Explore</h2>\r\n                            </div>\r\n                            {this.state.Post.map(post => {\r\n                                return (\r\n                                    <Tile Title={post.Title} Body={post.Body} Name={post.Name} Email={post.Email} isLiked={this.state.MyLikes}/>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </section>\r\n\r\n                    <section className=\"searchbar-main\">\r\n                        <Searchbar />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './Pages/Login';\nimport Main from './Pages/Main';\nimport Create from './Pages/Create';\nimport Profile from './Pages/Profile';\nimport Signup from './Pages/Signup';\nimport Users from './Pages/Users';\nimport Explore from './Pages/Explore';\nimport Post from './Pages/Post';\nimport Area from './Pages/Area';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route exact path=\"/area\" component={Area} />\n          <Route path=\"/home\" component={Main} />\n          <Route path=\"/create\" component={Create} />\n          <Route exact path=\"/profile/:email\" component={Profile} />\n          <Route exact path=\"/profile/:email/:follow\" component={Users} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/explore\" component={Explore} />\n          <Route path=\"/post/:email/:title\" component={Post} />\n        </Switch>  \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/download.2e1ce79c.png\";","module.exports = __webpack_public_path__ + \"static/media/Background.924e6a0a.jpg\";"],"sourceRoot":""}